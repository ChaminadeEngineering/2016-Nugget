// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.




#include "Pivot.h"
#include "../RobotMap.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

Pivot::Pivot() : Subsystem("Pivot") {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    pivotMotor = RobotMap::pivotpivotMotor;
    pivotLowerLimit = RobotMap::pivotPivotLowerLimit;
    pivotEncoder = RobotMap::pivotPivotEncoder;
    pivotUpperLimit = RobotMap::pivotPivotUpperLimit;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}

void Pivot::InitDefaultCommand() {
    // Set the default command for a subsystem here.
    // SetDefaultCommand(new MySpecialCommand());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}


// Put methods for controlling this subsystem
// here. Call these from Commands.
void Pivot::MovePivotUp()
{
	if (pivotLowerLimit)
	{
		while (pivotEncoder < pivotDriveSetpoint)
		{
			pivotMotor->Set(pivotSpeed);	//move it up, but not too fast
		}

void Pivot::MovePivotDown()
{
	pivotMotor->Set(-pivotSpeed);
}

void Pivot::PivotToCollect()
{
	while (!pivotLowerLimit)
	{
		pivotMotor->Set(-pivotSpeed);
	}
	pivotEncoder->Reset();
}

void Pivot::PivotToDrive()
{
	pivotMotor->Set(pivotSpeed);
}
