// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef PIVOT_H
#define PIVOT_H
#include "Commands/Subsystem.h"
#include "WPILib.h"

/**
 *
 *
 * @author ExampleAuthor
 */
class Pivot: public Subsystem {
private:
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	std::shared_ptr<CANTalon> pivotMotor;
	std::shared_ptr<DigitalInput> pivotLowerLimit;
	std::shared_ptr<Encoder> pivotEncoder;
	std::shared_ptr<DigitalInput> pivotUpperLimit;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

	int nextTarget = 0 ;
	const float KDeadZoneLimit = 0.1;

	const float SetPoint0 = 0 ;
	const float SetPoint1 = 25 ;
	const float SetPoint2 = 50 ;
	const float SetPoint3 = 75 ;
	const float SetPoint4 = 100 ;

public:
	const float pivotSpeed = 0.33;

	Pivot();
	void InitDefaultCommand();
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
	void GetEncoderValue() ;
	void MovePivotUp() ;
	void MovePivotDown() ;
	void StopPivot() ;
};

#endif
