// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<CANTalon> RobotMap::leftBaseLeftFrontMotor;
std::shared_ptr<CANTalon> RobotMap::leftBaseLeftTopMotor;
std::shared_ptr<CANTalon> RobotMap::leftBaseLeftRearMotor;
std::shared_ptr<CANTalon> RobotMap::rightBaseRightFrontMotor;
std::shared_ptr<CANTalon> RobotMap::rightBaseRightTopMotor;
std::shared_ptr<CANTalon> RobotMap::rightBaseRightRearMotor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    LiveWindow *lw = LiveWindow::GetInstance();

    leftBaseLeftFrontMotor.reset(new CANTalon(6));
    lw->AddActuator("LeftBase", "LeftFrontMotor", leftBaseLeftFrontMotor);
    
    leftBaseLeftTopMotor.reset(new CANTalon(5));
    lw->AddActuator("LeftBase", "LeftTopMotor", leftBaseLeftTopMotor);
    
    leftBaseLeftRearMotor.reset(new CANTalon(4));
    lw->AddActuator("LeftBase", "LeftRearMotor", leftBaseLeftRearMotor);
    
    rightBaseRightFrontMotor.reset(new CANTalon(2));
    lw->AddActuator("RightBase", "RightFrontMotor", rightBaseRightFrontMotor);
    
    rightBaseRightTopMotor.reset(new CANTalon(1));
    lw->AddActuator("RightBase", "RightTopMotor", rightBaseRightTopMotor);
    
    rightBaseRightRearMotor.reset(new CANTalon(3));
    lw->AddActuator("RightBase", "RightRearMotor", rightBaseRightRearMotor);
    


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
